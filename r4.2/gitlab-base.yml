variables:
  BACKEND_VMM: "xen"
  GIT_SUBMODULE_STRATEGY: recursive

workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /pr-.*/ || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "api" || $CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME =~ /.*-staging/ || $CI_COMMIT_REF_NAME == "test"'
      when: always
    - when: never

default:
  image: fepitre/qubesos-ci:latest
  tags:
    - vm

stages:
  - sources
  - prepare
  - checks
  - build
  - install
  - components
  - template
  - repro
  - tests
  - publish

### TEMPLATES FOR PULLREQUEST JOBS

.r4.2_components_prepare:
  artifacts:
    expire_in: 1 day
    paths:
      - qubes-builder.tar.xz
      - artifacts
  stage: sources
  before_script:
    # Pull docker image for using (qubes-builder) docker executor
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    # Clone qubes-builderv2
    - git clone https://github.com/QubesOS/qubes-builderv2 ~/qubes-builder
    # Clone and copy gitlab-ci builder configuration and scripts
    - git clone -b installv2 https://github.com/QubesOS/qubes-continuous-integration ~/qubes-continuous-integration
    - mv ~/qubes-continuous-integration/scripts/gitlab-*v2 ~/qubes-builder/
    - mv ~/qubes-continuous-integration/dockerfiles/*.Dockerfile ~/qubes-builder/dockerfiles/
    - mv ~/qubes-continuous-integration/scripts/repo-key.gpgbatch ~/qubes-builder/
    - mv ~/qubes-continuous-integration/scripts/combine-and-sign-repo ~/qubes-builder/
    - mv ~/qubes-continuous-integration/scripts/gitlab-builderv2.yml ~/qubes-builder/builder.yml
    - ls -R ~/qubes-builder/
  script:
    - ~/qubes-builder/gitlab-preparev2 "$CI_PROJECT_DIR" $SUBMODULE_OF
    - tar cJf $CI_PROJECT_DIR/qubes-builder.tar.xz --strip-components=1 -C ~/ qubes-builder
  after_script:
    - sudo rm -rf $CI_PROJECT_DIR/artifacts
    - mv ~/qubes-builder/artifacts $CI_PROJECT_DIR/

.r4.2_components_build:
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - artifacts/repository
      - artifacts/logs
  stage: build
  before_script:
    # Pull docker image for using (qubes-builder) docker executor
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    # Extract from prepare stage qubes-builder directory
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
  script:
    - ~/qubes-builder/gitlab-buildv2 "${COMPONENT-$CI_PROJECT_DIR}" "${DIST-${CI_JOB_NAME#r4.2:build:}}"
  after_script:
    - sudo rm -rf $CI_PROJECT_DIR/artifacts
    - mv ~/qubes-builder/artifacts $CI_PROJECT_DIR/

.r4.2_components_install:
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - artifacts/logs
  stage: install
  before_script:
    # Get artifacts from build jobs
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
    - mv $CI_PROJECT_DIR/artifacts/repository ~/qubes-builder/artifacts/
    # Provide 'qubesbuilder'
    - export "PYTHONPATH=$PYTHONPATH:$HOME/qubes-builder"
    - cd ~/qubes-builder/dockerfiles
    - docker build -t "${DIST-${CI_JOB_NAME#r4.2:install:}}" -f "${DIST-${CI_JOB_NAME#r4.2:install:}}".Dockerfile .
  script:
    - python3 ~/qubes-builder/gitlab-installv2 ~/qubes-builder/artifacts/repository "${DIST-${CI_JOB_NAME#r4.2:install:}}"
  after_script:
    - sudo rm -rf $CI_PROJECT_DIR/artifacts
    - mv ~/qubes-builder/artifacts $CI_PROJECT_DIR/

###

r4.2:prep:sources:
  extends: .r4.2_components_prepare

### OPENQA

.r4.2_openqa_repo:
  # we enforce tags to not override it
  tags:
    - docker
  stage: publish
  artifacts:
    expire_in: 7 days
    paths:
    - repo
  before_script:
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
  script:
    - cd ~/qubes-builder
    - sudo dnf -y install rpm-sign
    - gpg --generate-key --batch < ./repo-key.gpgbatch
    - ./combine-and-sign-repo "$CI_PROJECT_DIR/artifacts/repository" "$CI_PROJECT_DIR/repo" TEST
    - gpg -a --export > "$CI_PROJECT_DIR/repo/key.pub"
