#!/bin/bash

set -ex

# Script is assumed in qubes-builderv2 root directory
builder_dir="$(dirname "$0")"

# Component directory is passed as argument
component_dir="$1"

# if submodule=true, treat $component_dir as submodule of $component_name
submodule=false
if [ -n "${2-}" ]; then
    component_name="$2"
    submodule=true
else
    component_name="$(basename "$component_dir")"
fi

components_group="$3"

if [ -z "$component_dir" ]; then
    echo "Please provide component directory!"
    exit 1
fi

if [ "${component_name#qubes-}" == "${component_name}" ]; then
    echo "Cannot find 'qubes-' suffix. Is it a Qubes OS component?"
    exit 1
fi
# Drop qubes- prefix
component_name=${component_name#qubes-}

# Go to builder root directory
cd "$builder_dir"

if ! $submodule; then
    # Place Gitlab CI downloaded sources in artifacts/sources
    mkdir -p artifacts/sources
    cp -a "$component_dir" "artifacts/sources/$component_name"
fi

# Run fetch stage
read -r -a qb_opts <<< "${qb_opts}"
qb_opts+=( -o +components+"$component_name" )
./qb "${qb_opts[@]}" -c "$component_name" package fetch

# fetch remaining components in the group
if [ -n "$components_group" ] && [[ "$components_group" = *" $component_name "* ]]; then
    for component in $components_group; do
        if [ "$component" = "$component_name" ]; then
            continue
        fi
        ./qb "${qb_opts[@]}" -c "$component" package fetch
    done
    printf "components:\n" >> builder.yml
    printf -- '- %s\n' $components_group >> builder.yml
fi

if $submodule; then
    submodule_name=$(basename "$component_dir")
    if ! [ -d "artifacts/sources/$component_name/$submodule_name" ]; then
        echo "$submodule_name is not within $component_name component"
        exit 1
    fi
    rm -rf "artifacts/sources/$component_name/$submodule_name"
    cp -a "$component_dir" "artifacts/sources/$component_name/$submodule_name"
fi
