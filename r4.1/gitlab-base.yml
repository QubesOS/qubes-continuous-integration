variables:
  BACKEND_VMM: "xen"

workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /pr-.*/ || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "api" || $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /.*-staging/ || $CI_COMMIT_REF_NAME == "test"'
      when: always
    - when: never

default:
  image: fepitre/qubesos-ci:latest
  tags:
    - docker

stages:
  - sources
  - prepare
  - checks
  - build
  - install
  - template
  - repro
  - tests
  - publish

### TEMPLATES FOR PULLREQUEST JOBS

.components_prepare:
  # we enforce tags to not override it
  tags:
    - docker
  artifacts:
    expire_in: 1 day
    paths:
      - qubes-builder.tar.xz
  variables:
    GIT_CLONE_FAST: 1
  stage: sources
  before_script:
    - git clone https://github.com/QubesOS/qubes-builder ~/qubes-builder
    - git clone https://github.com/QubesOS/qubes-continuous-integration ~/qubes-continuous-integration
    - mv ~/qubes-continuous-integration/scripts/* ~/qubes-builder/scripts/
  script:
    - ~/qubes-builder/scripts/gitlab-prepare "$COMPONENTS"
  after_script:
    - tar cJf $CI_PROJECT_DIR/qubes-builder.tar.xz --strip-components=1 -C ~/ qubes-builder

.chroot_prepare:
  # we enforce tags to not override it
  tags:
    - docker
  artifacts:
    expire_in: 30 days
    when: always
    paths:
      - build-logs.tar.xz
      - chroot.tar.xz
  variables:
    USE_DIST_BUILD_TOOLS: 1
  stage: prepare
  before_script:
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
  script:
    - export BUILDERCONF=scripts/gitlab-builder.conf
    - make -C ~/qubes-builder prepare-chroot-$([[ -n ${DIST_DOM0} ]] && echo dom0 || echo vm) COMPONENTS='$(BUILDER_PLUGINS)'
    - cd ~/qubes-builder
    - make umount
    - sudo tar cJf $CI_PROJECT_DIR/chroot.tar.xz --strip-components=1 -C ~/qubes-builder chroot-*
    - ls -l $CI_PROJECT_DIR/chroot.tar.xz
    - xz -t $CI_PROJECT_DIR/chroot.tar.xz
  after_script:
    - cd ~/qubes-builder
    - tar cJf $CI_PROJECT_DIR/build-logs.tar.xz --strip-components=1 -C ~/qubes-builder build-logs

.components_build:
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - build-logs
      - qubes-packages-mirror-repo
  variables:
    USE_DIST_BUILD_TOOLS: 1
  stage: build
  before_script:
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
    - if [ -e $CI_PROJECT_DIR/chroot.tar.xz ]; then sudo tar xf $CI_PROJECT_DIR/chroot.tar.xz -C ~/qubes-builder; fi
#    # we import binpkgs from template build artifacts
#    - |
#        if [ -e $CI_PROJECT_DIR/binpkgs ]; then
#            mkdir -p ~/qubes-builder/cache/gentoo
#            cp -r $CI_PROJECT_DIR/binpkgs ~/qubes-builder/cache/gentoo/
#        fi
  script:
    - ~/qubes-builder/scripts/gitlab-build "$COMPONENTS"
  after_script:
    - rm -rf $CI_PROJECT_DIR/build-logs
    - mv ~/qubes-builder/build-logs $CI_PROJECT_DIR/
    - mv ~/qubes-builder/qubes-packages-mirror-repo $CI_PROJECT_DIR
#    - |
#        if [ -e ~/qubes-builder/cache/gentoo/binpkgs ] && [ "$COMPONENTS" == linux-template-builder ]; then
#            cp -r ~/qubes-builder/cache/gentoo/binpkgs $CI_PROJECT_DIR/;
#            rm -f $CI_PROJECT_DIR/binpkgs/.mnt
#        fi

.components_install:
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - gitlab-install.log
  stage: install
  before_script:
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
    - sudo tar xf $CI_PROJECT_DIR/chroot.tar.xz -C ~/qubes-builder
    - mv $CI_PROJECT_DIR/qubes-packages-mirror-repo/* ~/qubes-builder/qubes-packages-mirror-repo/
  script:
    # make prepare-chroot-* is for mounting builder repo artifacts
    - export BUILDERCONF=scripts/gitlab-builder.conf
    - make -C ~/qubes-builder prepare-chroot-$([[ -n ${DIST_DOM0} ]] && echo dom0 || echo vm) COMPONENTS='$(BUILDER_PLUGINS)'
    - ~/qubes-builder/scripts/gitlab-install
  after_script:
    - mv ~/qubes-builder/gitlab-install.log $CI_PROJECT_DIR/

.components_repro:
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - gitlab-reprotest.log
      - artifacts
  stage: repro
  before_script:
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
    - sudo tar xf $CI_PROJECT_DIR/chroot.tar.xz -C ~/qubes-builder
    - mv $CI_PROJECT_DIR/qubes-packages-mirror-repo/* ~/qubes-builder/qubes-packages-mirror-repo/
  script:
    - ~/qubes-builder/scripts/gitlab-reprotest
  after_script:
    - mv ~/qubes-builder/gitlab-reprotest.log $CI_PROJECT_DIR/
    - mv ~/qubes-builder/artifacts $CI_PROJECT_DIR/

.iso_build:
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - installer-qubes-os-iso-*.log
  stage: build
  before_script:
    - tar xf $CI_PROJECT_DIR/qubes-builder.tar.xz -C ~/
  script:
    - ~/qubes-builder/scripts/gitlab-build "$COMPONENTS"
    - $EXPECT_FAILURE make -C ~/qubes-builder iso COMPONENTS=installer-qubes-os VERBOSE=0
  after_script:
    - mv ~/qubes-builder/build-logs/installer-qubes-os-iso-*.log $CI_PROJECT_DIR/

###

prep:sources:
  extends: .components_prepare


### TEMPLATES FOR REBUILD JOBS

.fullbuild_sources_job:
  extends: .components_prepare
  before_script:
    - git clone https://github.com/QubesOS/qubes-builder ~/qubes-builder
  script:
    - cd ~/qubes-builder/
    - cp example-configs/qubes-os-r$RELEASE.conf builder.conf
    # WIP: newer generated example configs on the road
    - sed -i 's|^#COMPONENTS += builder-archlinux|COMPONENTS += builder-archlinux|' builder.conf
    - sed -i 's|^#BUILDER_PLUGINS += builder-archlinux|BUILDER_PLUGINS += builder-archlinux|' builder.conf
    - echo 'DEPENDENCIES+=rpm createrepo reprepro mock devscripts rsync debootstrap pbuilder python3-yaml' >> builder.conf
    - make install-deps
    - make get-sources COMPONENTS='builder $(BUILDER_PLUGINS)'
    - make get-sources

.fullbuild_components_job:
  extends: .components_build
  script:
    - cd ~/qubes-builder
    - make install-deps
    - make $([[ -n ${DIST_DOM0} ]] && echo qubes-dom0 || echo qubes-vm)

.fullbuild_template_job:
  extends: .components_build
  stage: template
  script:
    - cd ~/qubes-builder
    - make install-deps
    - make template
